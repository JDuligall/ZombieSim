package mapDrawable;

import java.awt.BasicStroke;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Path2D;
import java.util.List;

import org.openstreetmap.gui.jmapviewer.MapPolygonImpl;
import org.openstreetmap.gui.jmapviewer.interfaces.ICoordinate;


	 public class Zombie extends MapPolygonImpl {
	        public Zombie(List<? extends ICoordinate> points) {
	            super(null, null, points);
	        }

	        @Override
	        public void paint(Graphics g, List<Point> points) {
	            Graphics2D g2d = (Graphics2D) g.create();
	            //g2d.setColor(getColor());
	            //g2d.setStroke(new BasicStroke(10));
	            //Path2D path = buildPath(points);
	            //g2d.draw(path);
	            g2d.fill(new Ellipse2D.Double(points.get(1).getX(),points.get(1).getY(),100,100));
	            g2d.dispose();
	        }

	        private Path2D buildPath(List<Point> points) {
	            Path2D path = new Path2D.Double();
	            if (points != null && points.size() > 0) {
	                Point firstPoint = points.get(0);
	                path.moveTo(firstPoint.getX(), firstPoint.getY());
	                for (Point p : points) {
	                    path.lineTo(p.getX(), p.getY());    
	                }
	            } 
	            
	            
	            return path;
	        }
	    }